#language: java
#jdk:
#  - openjdk11

jobs:
  include:
    - os: linux
      env: JAVA_HOME="$HOME/.sdkman/candidates/java/current"
    - os: osx
      env: JAVA_HOME="$HOME/.sdkman/candidates/java/current"
    - os: windows
      language: shell
      env: JAVA_HOME="$HOME/.sdkman/candidates/java/current"

before_install:
  - if [ $TRAVIS_OS_NAME = windows ]; then choco install zip unzip ; fi
  # adding $HOME/.sdkman to cache would create an empty directory, which interferes with the initial installation
  - "[[ -d $HOME/.sdkman/ ]] && [[ -d $HOME/.sdkman/bin/ ]] || rm -rf $HOME/.sdkman/"
  - curl -sL https://get.sdkman.io | bash
  - mkdir -p "$HOME/.sdkman/etc/"
  - echo sdkman_auto_answer=true > "$HOME/.sdkman/etc/config"
  - echo sdkman_auto_selfupdate=true >> "$HOME/.sdkman/etc/config"
  - ls "$HOME/.sdkman"
  - "source $HOME/.sdkman/bin/sdkman-init.sh"

install:
  #  - if [ $TRAVIS_OS_NAME = windows ]; then choco install windows-sdk-7.1 kb2519277 zip unzip; fi
  - sdk current java
  - echo $JAVA_HOME
  - sdk current java | grep '20.0.0.r11-grl' || sdk install java 20.0.0.r11-grl
  - env
  - echo $JAVA_HOME
  - ls $JAVA_HOME/bin/
  - if [ $TRAVIS_OS_NAME != windows ]; then gu install native-image ; fi
  - if [ $TRAVIS_OS_NAME != windows ]; then native-image --version ; fi

before_script:
  - chmod +x mvnw
script:
  - java -version
  - ./mvnw --version; ./mvnw -DbuildArgs=${BUILD_ARGS} clean verify
# Deploy the resulting artifact to GitHub Releases
deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file: /home/travis/build/matheuscoimbra/nativegvm/target/untitled-1.0-SNAPSHOT-runner.jar
  skip_cleanup: true
  on:
    tags: true

# avoid uploading the cache after every build
#before_cache:
#  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
#  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
#cache:
#  directories:
#    - $HOME/.gradle/caches/
#    - $HOME/.gradle/wrapper/